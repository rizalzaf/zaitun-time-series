<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAO8AAABACAYAAADyOiCCAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAOvwAA
        Dr8BOAVTJAAAA9RJREFUeF7tnT1rVEEARceAuDYquyCIRYIiiWz8TtgoAVNYbKMQIWAhFirbamFUrI2C
        KKRQENJoE3srFexFbMTe3h9gvc59MLJsIqZ58O7MCQzZt1883r1nzsySJbsGg0GIPzNx9OPYrwN+uAJc
        gUZfge/x7D6ECG8rjgdxzMexZzgcBgbXgA40swOR0U4cd+PoCd6pOB4SVjPDIhdyGe9A5HUljosJ3vuU
        hJLQAY8ORHCXgZctAlskww4Ar2FomNHDjHXnBLzAi3VNOwC8psHVPavz/s23O/ACL+Y17QDwmgaHGZtv
        xrozAl7gxbymHQBe0+DqntV5/+abfRTeyXiwSmjND42MyEgdAF7My7LZtAPj8PLnkaZBYuPybAy8wIp5
        TTsAvKbBYdryTLvNt4r+fjFBH1ixbAZmTGzSAcxrEhSmxbSYF1gxayYdwLyZBImZyzMz8AIvJjbtAPCa
        BodpyzMte15gxbSZdADzZhIkJi7PxMALvJjYtAPAaxocpi3PtOx5gRXTZtIBzJtJkJi4PBMDL/BiYtMO
        AK9pcJi2PNOy5wVWTJtJBzBvJkFi4vJMDLzAi4lNOwC8psFh2vJMy54XWDFtJh3AvJkEiYnLMzHwAi8m
        Nu0A8JoGh2nLMy17XmDFtJl0APNmEiQmLs/EwAu8mNi0A8BrGhymLc+07HmBFdNm0gHMm0mQmLg8E2+B
        N3wL83FcZnAN6ECzOzD7ZvZJ/3F/Wf9lu/pHYzGwC4TW7NDIh3zUAcG7uL54HXhZbbDaMusA8LoEdvPw
        o5DGu73XsC/2BV4XeMO5YWif/FEN3b50ZB2AywYYeJ3gTed67+CdsPvsb+AFXva8DgDLtuk8tWxOx+eP
        bYTWmV/VsX4LbD1PS+x9p3+GQye+bHlMr08G1ySAxS33+5jXAVydo+BMe14BOX38fQXp1cm18OzAreq2
        QNZjCV69RvfpWM9Pj+l3ul+vFcDso+0ABl4neNOeN4Gncxd8AlOPybT6neBNt8ePR/fPeo7g1cTgci04
        z2qiAV6XIowum0fPWUvlU9ObFXyCeqfwjn56rduYF/Mye9f0Icq/4NX92ucKvmTg/5lXy2YBr+fpdex5
        7cDFvC7WTXve7c5X4GnZq7FTeAX76AdWU93PTLo1Tbo1doxlc40XFyD8gHDKDHiB13LJ6ARZXecKvMAL
        vKYdAF7T4OqazXlfn6U+8AIv5jXtQIT3afrzyFb8Pu9q92339sTXiSvMwD4zMFmVl1XnY+fG3Ou5jYWX
        Cyv6Pq/GzNLzpRe9V71NBteADjS7A1G0a+1P7aN/ADMq0AqbFhTiAAAAAElFTkSuQmCC
</value>
  </data>
</root>