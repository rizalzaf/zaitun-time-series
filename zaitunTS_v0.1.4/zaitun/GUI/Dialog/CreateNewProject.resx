<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICD/AFIAAwCoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA+Pj4APPw8gDr6+sA5ubmAPX19QCY2MIAc8CaAGO4iwBYsoQAW7aFAFu3hgBZtYQAXLSGAHe/
        mwCd3MgAf8alAGC3hQBft4kAYLiKAGK3igBhtokAYbeHAF63hQBXtoQAgcGkAPb19wCZ2cMAX7WFAFy3
        hgBiuIgAZLmMAGa5jABpuo0AZbqNAGe5jgBnuo0AXreGALfm0ACEyqsAXbaEAGW3jABquo8AabeOAGe1
        jABquI8AabuQAGy8kQBru5AAaLqPAGW2iQBatYQAiMytAGeyjABot44AZbCKALXm0ACe3ckAbbyTAHG/
        lgBwv5YAb76VAG6+kwBftoQA9PT0AGq5kAC55tMAfb2fAG69lAB1wpwAdcOaAHTBmwBywJcAY7eHAGS6
        igBqu44Aa7qRAG68kwC55tUAvenYAHa9nAB5xqAAecahAHjFnwB3xJ4AdsOdAHTCmQBwv5QAbb2SALzl
        1gC759YAcL6VAHrEoAB+yKQAf8mnAH3HowB7xaEAc8GYAGO2iQBitoYAZbiLAG+9lAB8xqQAgMqoAIHL
        qQCCzKoAhsytAIXLrACEy6oAg8qpAHjFoAB1xJ0Ab7+UAF22hQBhtooAZriNAKDfywC55dQAh82uAIjO
        rwCLzrEAis6vAHHAlwBgtoYAaLiNAHq6nQC559QAwOrZAHnDoQCFzKsAi8+wAI3QswCP0rcAkNO4AI7R
        tgCMz7IAuufUAH/JpQCP0rUAk9W8AJXXvgCJza4AfcelAGi7jgBjuYkAZLWGALfn1QC36NQAd8GdAI7R
        tACR1LkAlda9AJfYvwCZ2sQAkNO2AIzQsQB8w6IAis2wAJfZwACc3MYAm9vFAJPWuwC75tcAt+jSAIDH
        pgCf3soAoeDMAJjZwwCU1r0AY7iGAGG1hQCX2MIAuubVAJraxABctYMAuebWALvo1wCU17wAm9zGAJrb
        xQCW2L8AktW6AHzGogBdtIgAvujXAHi/ngCCyagAX7iHAPn5+QCBxaYAvOnWALzm1QBkt4oAv+nYAGm5
        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
        AB/8AAA//wAA//+AA///8B//
</value>
  </data>
</root>